//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    PointLight testLights[4];           // Offset:  192, size:  384
    PointLight gPointLight;             // Offset:  576, size:   96
    float3  gEyePosW;                   // Offset:  672, size:   12
    float2  LensCenter;                 // Offset:  688, size:    8
    float2  ScreenCenter;               // Offset:  696, size:    8
    float2  Scale;                      // Offset:  704, size:    8
    float2  ScaleIn;                    // Offset:  712, size:    8
    float4  HmdWarpParam;               // Offset:  720, size:   16
    float4  ChromAbParam;               // Offset:  736, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
}

//
// 3 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState Linear
{
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 18 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,1]>
                loop 
                  ilt r2.w, r1.w, l(1)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,2]>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,2]>
                loop 
                  ilt r2.w, r1.w, l(2)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,3]>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, l(3)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[18], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 99 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 106
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 138
                mul r0.w, r0.w, cb0[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,1]>
                loop 
                  ilt r3.w, r1.w, l(1)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,2]>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,2]>
                loop 
                  ilt r3.w, r1.w, l(2)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,3]>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, l(3)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 TestLights
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 146 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 149
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 152
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 155
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 162
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 180
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                
                #line 192
                nop 
                mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 192 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 200
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // TestPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // TestPS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

    technique11 OculusTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12 [unused]
                //   float2 LensCenter;                 // Offset:  688 Size:     8
                //   float2 ScreenCenter;               // Offset:  696 Size:     8
                //   float2 Scale;                      // Offset:  704 Size:     8
                //   float2 ScaleIn;                    // Offset:  712 Size:     8
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16
                //   float4 ChromAbParam;               // Offset:  736 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // Linear                            sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[47], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 210 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xy, -cb0[43].xyxx
                add r0.xy, r0.xyxx, v3.xyxx
                mul r0.xy, r0.xyxx, cb0[44].zwzz  // theta<0:NaN:Inf,1:NaN:Inf>
                mul r0.z, r0.x, r0.x
                mul r0.w, r0.y, r0.y
                add r0.z, r0.w, r0.z  // rSq<0:NaN:Inf>
                mul r0.w, r0.z, cb0[45].y
                add r0.w, r0.w, cb0[45].x
                mul r1.x, r0.z, cb0[45].z
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r1.x, r0.z, cb0[45].w
                mul r1.x, r0.z, r1.x
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r0.xy, r0.wwww, r0.xyxx  // theta1<0:NaN:Inf,1:NaN:Inf>
                
                #line 216
                mul r0.w, r0.z, cb0[46].w
                add r0.w, r0.w, cb0[46].z
                mul r1.xy, r0.wwww, r0.xyxx  // thetaBlue<0:NaN:Inf,1:NaN:Inf>
                mul r1.xy, r1.xyxx, cb0[44].xyxx
                add r1.xy, r1.xyxx, cb0[43].xyxx  // tcBlue<0:NaN:Inf,1:NaN:Inf>
                add r1.zw, cb0[43].zzzw, l(0.000000, 0.000000, -0.250000, -0.500000)
                add r2.xy, cb0[43].zwzz, l(0.250000, 0.500000, 0.000000, 0.000000)
                max r1.zw, r1.zzzw, r1.xxxy
                min r1.zw, r2.xxxy, r1.zzzw
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                dp2 r0.w, r1.zwzz, r1.zwzz
                ne r0.w, r0.w, l(0.000000)
                
                #line 222
                sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.zxyw, s0
                
                #line 225
                mul r1.yz, r0.xxyx, cb0[44].xxyx
                add r1.yz, r1.yyzy, cb0[43].xxyx  // tcGreen<0:NaN:Inf,1:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t0.xyzw, s0
                mul r0.z, r0.z, cb0[46].y
                add r0.z, r0.z, cb0[46].x
                mul r0.xy, r0.zzzz, r0.xyxx  // thetaRed<0:NaN:Inf,1:NaN:Inf>
                mul r0.xy, r0.xyxx, cb0[44].xyxx
                add r0.xy, r0.xyxx, cb0[43].xyxx  // tcRed<0:NaN:Inf,1:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
                
                #line 218
                if_nz r0.w
                  mov o0.xyzw, l(0,0,0,0)  // OculusPS<0: 0f,1: 0f,2: 0f,3: 0f>
                  ret 
                endif 
                
                #line 222
                mov r1.x, r1.x  // blue<0:Inf>
                
                #line 226
                mov r1.y, r1.y  // green<0:Inf>
                
                #line 230
                mov r0.x, r0.x  // red<0:Inf>
                mov o0.w, l(1.000000)  // OculusPS<3: 1f>
                mov o0.x, r0.x  // OculusPS<0:Inf>
                mov o0.y, r1.y  // OculusPS<1:Inf>
                mov o0.z, r1.x  // OculusPS<2:Inf>
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

    technique11 Light1DX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,1]>
                loop 
                  ilt r2.w, r1.w, l(1)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,2]>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light2DX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,2]>
                loop 
                  ilt r2.w, r1.w, l(2)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,3]>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light3DX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov r2.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r3.xyz, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r2.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r2.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, l(3)
                  breakc_z r2.w
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(4)
                  mov r9.xyz, cb0[r2.w + 0].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[r2.w + 1].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[r2.w + 2].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[r2.w + 3].xyzx  // L<12,13,14>
                  mov r13.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r14.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r2.w, r12.xyzx, r13.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r3.w, l(0.000000), r2.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r4.w, r9.xyzx, r13.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r12.xyz, r4.wwww, r13.xyzx
                  add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r9.xyzx, r14.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r8.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r7.xyz, r7.xyzx, r2.wwww
                  mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r4.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 128
                nop 
                mov r2.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r6.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r7.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r8.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r12.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r13.y
                
                #line 118
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r2.w, r8.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r0.xyz, r0.xyzx, r2.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r7.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r6.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r7.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, cb1[17].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[18], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 99 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                sample r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 106
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 138
                mul r0.w, r0.w, cb0[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,1]>
                loop 
                  ilt r3.w, r1.w, l(1)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,2]>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0:[0,2]>
                loop 
                  ilt r3.w, r1.w, l(2)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0:[1,3]>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], dynamicIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 83 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 86
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 89
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 92
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 99
                sample r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 110
                mov r3.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 118
                mov r0.w, l(0)  // i<0: 0>
                mov r4.xyz, r3.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.xyz, r3.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, l(3)
                  breakc_z r3.w
                  nop 
                  mov r7.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r8.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r9.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(4)
                  mov r10.xyz, cb0[r3.w + 0].xyzx  // L<0,1,2>
                  mov r11.xyz, cb0[r3.w + 1].xyzx  // L<4,5,6>
                  mov r12.xyz, cb0[r3.w + 2].xyzx  // L<8,9,10>
                  mov r13.xyz, cb0[r3.w + 3].xyzx  // L<12,13,14>
                  mov r14.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r15.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                  mov r13.xyz, -r13.xyzx  // lightVec<0,1,2>
                
                #line 75
                  mul r7.xyz, r7.xyzx, r10.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                  dp3 r3.w, r13.xyzx, r14.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                  lt r4.w, l(0.000000), r3.w
                  mov r10.xyz, -r13.xyzx
                  dp3 r5.w, r10.xyzx, r14.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r13.xyz, r5.wwww, r14.xyzx
                  add r10.xyz, r10.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r10.xyzx, r15.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r9.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r8.xyz, r8.xyzx, r3.wwww
                  mul r8.xyz, r11.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r5.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                  movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r9.xyz, r4.wwww, r9.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 120 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r7.xyz, r7.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r8.xyz, r8.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r9.xyz, r9.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                  add r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.xyz, r6.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 128
                nop 
                mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                mov r0.w, cb0[39].w  // L<15>
                mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                mov r14.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                lt r0.w, r0.w, r14.y
                
                #line 118
                if_z r0.w
                  div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                  lt r1.w, l(0.000000), r0.w
                  mov r9.xyz, -r12.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r8.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r7.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r8.xyzx, r0.xxxx
                  mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                  movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r0.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 128 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r4.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 122 instruction slots used
                            
            };
        }

    }

    technique11 TestLightsDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float2 LensCenter;                 // Offset:  688 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset:  696 Size:     8 [unused]
                //   float2 Scale;                      // Offset:  704 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset:  712 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset:  736 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 146 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 149
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 152
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 155
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 162
                sample r2.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 180
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r3.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 183
                  nop 
                  mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                  mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                  mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 183 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                endif 
                
                #line 192
                nop 
                mov r6.xyz, cb1[16].xyzx  // mat<0,1,2>
                mov r7.xyz, cb1[17].xyzx  // mat<4,5,6>
                mov r8.xyzw, cb1[18].xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 192 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 200
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                mul r0.w, r2.w, cb1[17].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // TestPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // TestPS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

    technique11 OculusTechDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 68 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 72
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 75
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12 [unused]
                //   float2 LensCenter;                 // Offset:  688 Size:     8
                //   float2 ScreenCenter;               // Offset:  696 Size:     8
                //   float2 Scale;                      // Offset:  704 Size:     8
                //   float2 ScaleIn;                    // Offset:  712 Size:     8
                //   float4 HmdWarpParam;               // Offset:  720 Size:    16
                //   float4 ChromAbParam;               // Offset:  736 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // Linear                            sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[47], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 4
                
                #line 210 "C:\Users\Jon Palmer\School\3dGraphics\GitM\PVGame\PeripheralVoid\FX\Basic.fx"
                mov r0.xy, -cb0[43].xyxx
                add r0.xy, r0.xyxx, v3.xyxx
                mul r0.xy, r0.xyxx, cb0[44].zwzz  // theta<0:NaN:Inf,1:NaN:Inf>
                mul r0.z, r0.x, r0.x
                mul r0.w, r0.y, r0.y
                add r0.z, r0.w, r0.z  // rSq<0:NaN:Inf>
                mul r0.w, r0.z, cb0[45].y
                add r0.w, r0.w, cb0[45].x
                mul r1.x, r0.z, cb0[45].z
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r1.x, r0.z, cb0[45].w
                mul r1.x, r0.z, r1.x
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r0.xy, r0.wwww, r0.xyxx  // theta1<0:NaN:Inf,1:NaN:Inf>
                
                #line 216
                mul r0.w, r0.z, cb0[46].w
                add r0.w, r0.w, cb0[46].z
                mul r1.xy, r0.wwww, r0.xyxx  // thetaBlue<0:NaN:Inf,1:NaN:Inf>
                mul r1.xy, r1.xyxx, cb0[44].xyxx
                add r1.xy, r1.xyxx, cb0[43].xyxx  // tcBlue<0:NaN:Inf,1:NaN:Inf>
                add r1.zw, cb0[43].zzzw, l(0.000000, 0.000000, -0.250000, -0.500000)
                add r2.xy, cb0[43].zwzz, l(0.250000, 0.500000, 0.000000, 0.000000)
                max r1.zw, r1.zzzw, r1.xxxy
                min r1.zw, r2.xxxy, r1.zzzw
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                dp2 r0.w, r1.zwzz, r1.zwzz
                ne r0.w, r0.w, l(0.000000)
                
                #line 222
                sample r1.xyzw, r1.xyxx, t0.xyzw, s0
                
                #line 225
                mul r1.xy, r0.xyxx, cb0[44].xyxx
                add r1.xy, r1.xyxx, cb0[43].xyxx  // tcGreen<0:NaN:Inf,1:NaN:Inf>
                sample r2.xyzw, r1.xyxx, t0.xyzw, s0
                mul r0.z, r0.z, cb0[46].y
                add r0.z, r0.z, cb0[46].x
                mul r0.xy, r0.zzzz, r0.xyxx  // thetaRed<0:NaN:Inf,1:NaN:Inf>
                mul r0.xy, r0.xyxx, cb0[44].xyxx
                add r0.xy, r0.xyxx, cb0[43].xyxx  // tcRed<0:NaN:Inf,1:NaN:Inf>
                sample r3.xyzw, r0.xyxx, t0.xyzw, s0
                
                #line 218
                if_nz r0.w
                  mov o0.xyzw, l(0,0,0,0)  // OculusPS<0: 0f,1: 0f,2: 0f,3: 0f>
                  ret 
                endif 
                
                #line 222
                mov r1.z, r1.z  // blue<0:Inf>
                
                #line 226
                mov r2.y, r2.y  // green<0:Inf>
                
                #line 230
                mov r3.x, r3.x  // red<0:Inf>
                mov o0.w, l(1.000000)  // OculusPS<3: 1f>
                mov o0.x, r3.x  // OculusPS<0:Inf>
                mov o0.y, r2.y  // OculusPS<1:Inf>
                mov o0.z, r1.z  // OculusPS<2:Inf>
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

}

