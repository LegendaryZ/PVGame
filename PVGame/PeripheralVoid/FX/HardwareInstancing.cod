//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    PointLight testLights[4];           // Offset:  192, size:  384
    PointLight gPointLight;             // Offset:  576, size:   96
    float3  gEyePosW;                   // Offset:  672, size:   12
    float   gFogStart;                  // Offset:  684, size:    4
    float   gFogRange;                  // Offset:  688, size:    4
    float4  gFogColor;                  // Offset:  704, size:   16
}

cbuffer cbPerObject
{
    float4x4 gViewProj;                 // Offset:    0, size:   64
    float4x4 gTexTransform;             // Offset:   64, size:   64
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 LightsWithAtlas
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   float4x4 gTexTransform;            // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[6], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 64 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 68
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                div r0.x, v2.x, l(2.000000)
                mul r0.y, v12.x, l(0.500000)
                add r0.x, r0.y, r0.x  // texCoord<0>
                div r1.w, v2.y, l(2.000000)
                mul r2.w, v12.y, l(0.500000)
                add r0.y, r1.w, r2.w  // texCoord<1>
                
                #line 74
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[4].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[5].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float gFogStart;                   // Offset:  684 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  688 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  704 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 82 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 85
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 88
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 91
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 98
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 116
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                
                #line 128
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 128 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithoutAtlas
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   float4x4 gTexTransform;            // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[6], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 64 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 68
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 74
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[4].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[5].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 35 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float gFogStart;                   // Offset:  684 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  688 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  704 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 82 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 85
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 88
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 91
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 98
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 116
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                
                #line 128
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 128 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithAtlasDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   float4x4 gTexTransform;            // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[6], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 64 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 68
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                div r0.x, v2.x, l(2.000000)
                mul r0.y, v12.x, l(0.500000)
                add r0.x, r0.y, r0.x  // texCoord<0>
                div r1.w, v2.y, l(2.000000)
                mul r2.w, v12.y, l(0.500000)
                add r0.y, r1.w, r2.w  // texCoord<1>
                
                #line 74
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[4].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[5].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float gFogStart;                   // Offset:  684 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  688 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  704 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 82 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 85
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 88
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 91
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 98
                sample r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 116
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                
                #line 128
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 128 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithoutAtlasDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   float4x4 gTexTransform;            // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[6], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 64 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 68
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 74
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[4].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[5].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 35 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[4];                   // Offset:  192 Size:   384
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  576
                //       float4 Diffuse;                // Offset:  592
                //       float4 Specular;               // Offset:  608
                //       float3 Position;               // Offset:  624
                //       float Range;                   // Offset:  636
                //       float3 Att;                    // Offset:  640
                //       float pad;                     // Offset:  652
                //       float4 On;                     // Offset:  656
                //
                //   } gPointLight;                     // Offset:  576 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset:  672 Size:    12
                //   float gFogStart;                   // Offset:  684 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  688 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  704 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 82 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 85
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[42].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 88
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 91
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 98
                sample r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 116
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 119
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 119 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                endif 
                
                #line 128
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 128 "\\banner.main.ad.rit.edu\students\mjs5767\IGMProfile\Desktop\pvgame new new\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 297 instruction slots used
                            
            };
        }

    }

}

