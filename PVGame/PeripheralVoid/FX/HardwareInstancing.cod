//
// FX Version: fx_5_0
//
// 4 local buffer(s)
//
cbuffer $Globals
{
    float4x4 gOcView;                   // Offset:    0, size:   64
}

cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    PointLight testLights[10];          // Offset:  192, size:  960
    PointLight gPointLight;             // Offset: 1152, size:   96
    float3  gEyePosW;                   // Offset: 1248, size:   12
    float4  gBlurColor;                 // Offset: 1264, size:   16
    float   gTexelWidth;                // Offset: 1280, size:    4
    float   gTexelHeight;               // Offset: 1284, size:    4
    float2  gScreenSize;                // Offset: 1288, size:    8
    float2  LensCenter;                 // Offset: 1296, size:    8
    float2  ScreenCenter;               // Offset: 1304, size:    8
    float2  Scale;                      // Offset: 1312, size:    8
    float2  ScaleIn;                    // Offset: 1320, size:    8
    float4  HmdWarpParam;               // Offset: 1328, size:   16
    float4  ChromAbParam;               // Offset: 1344, size:   16
}

cbuffer cbSettings
{
    float   gWeights[21] = { 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 };// Offset:    0, size:  324
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
    float4x4 gTexTransform;             // Offset:  128, size:   64
    float4x4 gWorldViewProj;            // Offset:  192, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  256, size:   64
}

//
// 4 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState Linear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
};
SamplerState samInputImage
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 16 technique(s)
    //
    technique11 LightsWithAtlas
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_input v13.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_output o8.xyzw
                dcl_temps 9
                
                #line 119 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 123
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 129
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov r8.xyzw, v13.xyzw  // vout<30,31,32,33>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // VS<28,29>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o8.xyzw, r8.xyzw  // VS<30,31,32,33>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 39 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xy  
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_input_ps linear v8.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 186 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 189
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[78].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 192
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 195
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                frc r2.xy, v3.xyxx
                mul r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
                mul r2.zw, v3.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
                add r2.xy, r2.zwzz, r2.xyxx
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 220
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[41].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                  mov r0.w, cb0[39].w  // L<15>
                  mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[47].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[42].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[43].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[44].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[45].xyzx  // L<12,13,14>
                  mov r0.w, cb0[45].w  // L<15>
                  mov r13.xyz, cb0[46].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[53].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[48].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[49].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[50].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[51].xyzx  // L<12,13,14>
                  mov r0.w, cb0[51].w  // L<15>
                  mov r13.xyz, cb0[52].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[59].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[54].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[55].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[56].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[57].xyzx  // L<12,13,14>
                  mov r0.w, cb0[57].w  // L<15>
                  mov r13.xyz, cb0[58].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[65].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[60].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[61].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[62].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[63].xyzx  // L<12,13,14>
                  mov r0.w, cb0[63].w  // L<15>
                  mov r13.xyz, cb0[64].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[71].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[66].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[67].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[68].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[69].xyzx  // L<12,13,14>
                  mov r0.w, cb0[69].w  // L<15>
                  mov r13.xyz, cb0[70].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                
                #line 232
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 232 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 240
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 245
                lt r0.w, l(0.000000), v8.w
                ge r1.x, v0.x, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].z, v0.x
                and r0.w, r0.w, r1.x
                ge r1.x, v0.y, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].w, v0.y
                and r0.w, r0.w, r1.x
                if_nz r0.w
                  mov r0.w, v0.x  // pin<0:[-0f,3.40282e+038f]>
                  mov r1.x, cb0[80].z  // gScreenSize<0:[-0f,3.40282e+038f]>
                  mov r1.y, v0.y  // pin<1:[-0f,3.40282e+038f]>
                  mov r1.z, cb0[80].w  // gScreenSize<1:[-0f,3.40282e+038f]>
                  add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  div r1.x, r1.x, l(2.000000)  // halfWidth<0:[-0f,1.70141e+038f]>
                  div r1.z, r1.z, l(2.000000)  // halfHeight<0:[-0f,1.70141e+038f]>
                  mov r1.w, -r1.x
                  add r0.w, r0.w, r1.w  // xDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mov r1.w, -r1.z
                  add r1.y, r1.w, r1.y  // yDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mul r0.w, r0.w, r0.w
                  mul r1.y, r1.y, r1.y
                  add r0.w, r0.w, r1.y  // dist<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  mul r1.y, r1.z, r1.z
                  add r1.x, r1.y, r1.x  // range<0:NaN:Inf>
                
                #line 256
                  ge r1.y, r1.x, r0.w
                  if_nz r1.y
                    mul r1.yzw, v8.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                    mul r1.yzw, r0.wwww, r1.yyzw
                    div r1.xyz, r1.yzwy, r1.xxxx
                    add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  endif 
                
                #line 245
                endif 
                
                #line 263
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 696 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithoutAtlas
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_input v13.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_output o8.xyzw
                dcl_temps 9
                
                #line 119 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 123
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 129
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov r8.xyzw, v13.xyzw  // vout<30,31,32,33>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // VS<28,29>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o8.xyzw, r8.xyzw  // VS<30,31,32,33>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 39 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xy  
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_input_ps linear v8.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 186 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 189
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[78].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 192
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 195
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                frc r2.xy, v3.xyxx
                mul r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
                mul r2.zw, v3.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
                add r2.xy, r2.zwzz, r2.xyxx
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 220
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[41].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                  mov r0.w, cb0[39].w  // L<15>
                  mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[47].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[42].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[43].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[44].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[45].xyzx  // L<12,13,14>
                  mov r0.w, cb0[45].w  // L<15>
                  mov r13.xyz, cb0[46].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[53].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[48].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[49].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[50].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[51].xyzx  // L<12,13,14>
                  mov r0.w, cb0[51].w  // L<15>
                  mov r13.xyz, cb0[52].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[59].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[54].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[55].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[56].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[57].xyzx  // L<12,13,14>
                  mov r0.w, cb0[57].w  // L<15>
                  mov r13.xyz, cb0[58].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[65].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[60].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[61].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[62].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[63].xyzx  // L<12,13,14>
                  mov r0.w, cb0[63].w  // L<15>
                  mov r13.xyz, cb0[64].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[71].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[66].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[67].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[68].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[69].xyzx  // L<12,13,14>
                  mov r0.w, cb0[69].w  // L<15>
                  mov r13.xyz, cb0[70].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                
                #line 232
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 232 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 240
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 245
                lt r0.w, l(0.000000), v8.w
                ge r1.x, v0.x, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].z, v0.x
                and r0.w, r0.w, r1.x
                ge r1.x, v0.y, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].w, v0.y
                and r0.w, r0.w, r1.x
                if_nz r0.w
                  mov r0.w, v0.x  // pin<0:[-0f,3.40282e+038f]>
                  mov r1.x, cb0[80].z  // gScreenSize<0:[-0f,3.40282e+038f]>
                  mov r1.y, v0.y  // pin<1:[-0f,3.40282e+038f]>
                  mov r1.z, cb0[80].w  // gScreenSize<1:[-0f,3.40282e+038f]>
                  add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  div r1.x, r1.x, l(2.000000)  // halfWidth<0:[-0f,1.70141e+038f]>
                  div r1.z, r1.z, l(2.000000)  // halfHeight<0:[-0f,1.70141e+038f]>
                  mov r1.w, -r1.x
                  add r0.w, r0.w, r1.w  // xDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mov r1.w, -r1.z
                  add r1.y, r1.w, r1.y  // yDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mul r0.w, r0.w, r0.w
                  mul r1.y, r1.y, r1.y
                  add r0.w, r0.w, r1.y  // dist<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  mul r1.y, r1.z, r1.z
                  add r1.x, r1.y, r1.x  // range<0:NaN:Inf>
                
                #line 256
                  ge r1.y, r1.x, r0.w
                  if_nz r1.y
                    mul r1.yzw, v8.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                    mul r1.yzw, r0.wwww, r1.yyzw
                    div r1.xyz, r1.yzwy, r1.xxxx
                    add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  endif 
                
                #line 245
                endif 
                
                #line 263
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 696 instruction slots used
                            
            };
        }

    }

    technique11 TexturePassThrough
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 141 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[16].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[17].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[18].xyzx  // vout<9:NaN:Inf>
                
                #line 145
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 148
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r3.xyzw  // TextureVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // TextureVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // TextureVS<28,29>
                mov o4.xyzw, r0.xyzw  // TextureVS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // TextureVS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // TextureVS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // TextureVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // TextureVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // TextureVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 290 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 295
                mul r0.w, r0.w, l(0.500000)  // litColor<3:Inf>
                mov o0.xyz, r0.xyzx  // TexturePS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // TexturePS<3:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 TexturePassThroughWithCursor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 141 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[16].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[17].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[18].xyzx  // vout<9:NaN:Inf>
                
                #line 145
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 148
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r3.xyzw  // TextureVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // TextureVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // TextureVS<28,29>
                mov o4.xyzw, r0.xyzw  // TextureVS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // TextureVS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // TextureVS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // TextureVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // TextureVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // TextureVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 270 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                ge r0.x, v3.x, l(0.495000)
                and r0.x, r0.x, l(-1)
                ge r0.y, l(0.505000), v3.x
                and r0.x, r0.y, r0.x
                ge r0.y, v3.y, l(0.495000)
                and r0.x, r0.y, r0.x
                ge r0.y, l(0.505000), v3.y
                and r0.x, r0.y, r0.x
                if_nz r0.x
                  mov o0.xyzw, l(0,0,0,1.000000)  // TexturePS<0: 0f,1: 0f,2: 0f,3: 1f>
                  ret 
                endif 
                
                #line 290
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 295
                mul r0.w, r0.w, l(0.500000)  // litColor<3:Inf>
                mov o0.xyz, r0.xyzx  // TexturePS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // TexturePS<3:Inf>
                ret 
                // Approximately 18 instruction slots used
                            
            };
        }

    }

    technique11 HorzBlur
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 305 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, cb0[80].x  // texOffset<0>
                mov r0.y, l(0)  // texOffset<1: 0f>
                
                #line 313
                sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN:Inf,1:NaN>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 VertBlur
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 309 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, l(0)  // texOffset<0: 0f>
                mov r0.y, cb0[80].y  // texOffset<1>
                
                #line 313
                sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN,1:NaN:Inf>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 Blur
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 309 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, l(0)  // texOffset<0: 0f>
                mov r0.y, cb0[80].y  // texOffset<1>
                
                #line 313
                sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN,1:NaN:Inf>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 305 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, cb0[80].x  // texOffset<0>
                mov r0.y, l(0)  // texOffset<1: 0f>
                
                #line 313
                sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN:Inf,1:NaN>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 OculusTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 gOcView;                  // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 7
                
                #line 173 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyzw, v0.xxxx, cb0[0].xyzw
                mul r1.xyzw, v0.yyyy, cb0[1].xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v0.zzzz, cb0[2].xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // vout<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r1.xyz, v0.xxxx, cb0[0].xyzx
                mul r2.xyz, v0.yyyy, cb0[1].xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r2.xyz, v0.zzzz, cb0[2].xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r2.xyz, cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r2.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xy, v2.xxxx, cb1[8].xyxx
                mul r2.zw, v2.yyyy, cb1[9].xxxy
                add r2.xy, r2.zwzz, r2.xyxx
                add r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
                mul r2.zw, cb1[11].xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                add r2.xy, r2.zwzz, r2.xyxx  // vout<10:NaN:Inf,11:NaN:Inf>
                mov r3.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r4.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r5.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r6.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r2.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r0.xyzw  // OculusVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r2.xyxx  // OculusVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r2.zzzw  // OculusVS<28,29>
                mov o4.xyzw, r3.xyzw  // OculusVS<12,13,14,15>
                mov o5.xyzw, r4.xyzw  // OculusVS<16,17,18,19>
                mov o6.xyzw, r5.xyzw  // OculusVS<20,21,22,23>
                mov o7.xyzw, r6.xyzw  // OculusVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // OculusVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8
                //   float2 Scale;                      // Offset: 1312 Size:     8
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // Linear                            sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[85], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 346 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xy, -cb0[81].xyxx
                add r0.xy, r0.xyxx, v3.xyxx
                mul r0.xy, r0.xyxx, cb0[82].zwzz  // theta<0:NaN:Inf,1:NaN:Inf>
                mul r0.z, r0.x, r0.x
                mul r0.w, r0.y, r0.y
                add r0.z, r0.w, r0.z  // rSq<0:NaN:Inf>
                mul r0.w, r0.z, cb0[83].y
                add r0.w, r0.w, cb0[83].x
                mul r1.x, r0.z, cb0[83].z
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r1.x, r0.z, cb0[83].w
                mul r1.x, r0.z, r1.x
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r0.xy, r0.wwww, r0.xyxx  // theta1<0:NaN:Inf,1:NaN:Inf>
                
                #line 352
                mul r0.w, r0.z, cb0[84].w
                add r0.w, r0.w, cb0[84].z
                mul r1.xy, r0.wwww, r0.xyxx  // thetaBlue<0:NaN:Inf,1:NaN:Inf>
                mul r1.xy, r1.xyxx, cb0[82].xyxx
                add r1.xy, r1.xyxx, cb0[81].xyxx  // tcBlue<0:NaN:Inf,1:NaN:Inf>
                add r1.zw, cb0[81].zzzw, l(0.000000, 0.000000, -0.250000, -0.500000)
                add r2.xy, cb0[81].zwzz, l(0.250000, 0.500000, 0.000000, 0.000000)
                max r1.zw, r1.zzzw, r1.xxxy
                min r1.zw, r2.xxxy, r1.zzzw
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                dp2 r0.w, r1.zwzz, r1.zwzz
                ne r0.w, r0.w, l(0.000000)
                
                #line 358
                sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.zxyw, s0
                
                #line 361
                mul r1.yz, r0.xxyx, cb0[82].xxyx
                add r1.yz, r1.yyzy, cb0[81].xxyx  // tcGreen<0:NaN:Inf,1:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t0.xyzw, s0
                mul r0.z, r0.z, cb0[84].y
                add r0.z, r0.z, cb0[84].x
                mul r0.xy, r0.zzzz, r0.xyxx  // thetaRed<0:NaN:Inf,1:NaN:Inf>
                mul r0.xy, r0.xyxx, cb0[82].xyxx
                add r0.xy, r0.xyxx, cb0[81].xyxx  // tcRed<0:NaN:Inf,1:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
                
                #line 354
                if_nz r0.w
                  mov o0.xyzw, l(0,0,0,0)  // OculusPS<0: 0f,1: 0f,2: 0f,3: 0f>
                  ret 
                endif 
                
                #line 358
                mov r1.x, r1.x  // blue<0:Inf>
                
                #line 362
                mov r1.y, r1.y  // green<0:Inf>
                
                #line 366
                mov r0.x, r0.x  // red<0:Inf>
                mov o0.w, l(1.000000)  // OculusPS<3: 1f>
                mov o0.x, r0.x  // OculusPS<0:Inf>
                mov o0.y, r1.y  // OculusPS<1:Inf>
                mov o0.z, r1.x  // OculusPS<2:Inf>
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithAtlasDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_input v13.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_output o8.xyzw
                dcl_temps 9
                
                #line 119 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 123
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 129
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov r8.xyzw, v13.xyzw  // vout<30,31,32,33>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // VS<28,29>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o8.xyzw, r8.xyzw  // VS<30,31,32,33>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 39 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xy  
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_input_ps linear v8.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 186 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 189
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[78].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 192
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 195
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                frc r2.xy, v3.xyxx
                mul r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
                mul r2.zw, v3.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
                add r2.xy, r2.zwzz, r2.xyxx
                sample r2.xyzw, r2.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 220
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[41].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                  mov r0.w, cb0[39].w  // L<15>
                  mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[47].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[42].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[43].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[44].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[45].xyzx  // L<12,13,14>
                  mov r0.w, cb0[45].w  // L<15>
                  mov r13.xyz, cb0[46].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[53].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[48].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[49].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[50].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[51].xyzx  // L<12,13,14>
                  mov r0.w, cb0[51].w  // L<15>
                  mov r13.xyz, cb0[52].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[59].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[54].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[55].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[56].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[57].xyzx  // L<12,13,14>
                  mov r0.w, cb0[57].w  // L<15>
                  mov r13.xyz, cb0[58].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[65].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[60].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[61].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[62].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[63].xyzx  // L<12,13,14>
                  mov r0.w, cb0[63].w  // L<15>
                  mov r13.xyz, cb0[64].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[71].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[66].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[67].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[68].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[69].xyzx  // L<12,13,14>
                  mov r0.w, cb0[69].w  // L<15>
                  mov r13.xyz, cb0[70].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                
                #line 232
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 232 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 240
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 245
                lt r0.w, l(0.000000), v8.w
                ge r1.x, v0.x, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].z, v0.x
                and r0.w, r0.w, r1.x
                ge r1.x, v0.y, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].w, v0.y
                and r0.w, r0.w, r1.x
                if_nz r0.w
                  mov r0.w, v0.x  // pin<0:[-0f,3.40282e+038f]>
                  mov r1.x, cb0[80].z  // gScreenSize<0:[-0f,3.40282e+038f]>
                  mov r1.y, v0.y  // pin<1:[-0f,3.40282e+038f]>
                  mov r1.z, cb0[80].w  // gScreenSize<1:[-0f,3.40282e+038f]>
                  add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  div r1.x, r1.x, l(2.000000)  // halfWidth<0:[-0f,1.70141e+038f]>
                  div r1.z, r1.z, l(2.000000)  // halfHeight<0:[-0f,1.70141e+038f]>
                  mov r1.w, -r1.x
                  add r0.w, r0.w, r1.w  // xDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mov r1.w, -r1.z
                  add r1.y, r1.w, r1.y  // yDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mul r0.w, r0.w, r0.w
                  mul r1.y, r1.y, r1.y
                  add r0.w, r0.w, r1.y  // dist<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  mul r1.y, r1.z, r1.z
                  add r1.x, r1.y, r1.x  // range<0:NaN:Inf>
                
                #line 256
                  ge r1.y, r1.x, r0.w
                  if_nz r1.y
                    mul r1.yzw, v8.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                    mul r1.yzw, r0.wwww, r1.yyzw
                    div r1.xyz, r1.yzwy, r1.xxxx
                    add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  endif 
                
                #line 245
                endif 
                
                #line 263
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 696 instruction slots used
                            
            };
        }

    }

    technique11 LightsWithoutAtlasDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_input v13.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_output o8.xyzw
                dcl_temps 9
                
                #line 119 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xyz, v1.xxxx, v3.xyzx
                mul r3.xyz, v1.yyyy, v4.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v5.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 123
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 129
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov r8.xyzw, v13.xyzw  // vout<30,31,32,33>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // VS<28,29>
                mov o4.xyzw, r0.xyzw  // VS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // VS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // VS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // VS<24,25,26,27>
                mov o8.xyzw, r8.xyzw  // VS<30,31,32,33>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 39 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xy  
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyz 
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xyzw
                dcl_input_ps linear v6.xyzw
                dcl_input_ps linear v8.xyzw
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 186 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 189
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[78].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 192
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 195
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 203
                frc r2.xy, v3.xyxx
                mul r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
                mul r2.zw, v3.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
                add r2.xy, r2.zwzz, r2.xyxx
                sample r2.xyzw, r2.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 220
                eq r0.w, cb0[17].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r3.xyz, v4.xyzx  // mat<0,1,2>
                  mov r4.xyz, v5.xyzx  // mat<4,5,6>
                  mov r5.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[12].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[13].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[14].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[15].xyzx  // L<12,13,14>
                  mov r0.w, cb0[15].w  // L<15>
                  mov r10.xyz, cb0[16].xyzx  // L<16,17,18>
                  mov r11.xyz, v1.xyzx  // pos<0,1,2>
                  mov r12.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r13.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r11.xyz, -r11.xyzx
                  add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r9.xyzx, r9.xyzx
                  sqrt r11.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r11.y
                
                #line 118
                  if_z r0.w
                    div r9.xyz, r9.xyzx, r11.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r9.xyzx, r12.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r6.xyz, -r9.xyzx
                    dp3 r3.w, r6.xyzx, r12.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r9.xyz, r3.wwww, r12.xyzx
                    add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r6.xyzx, r13.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r5.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r4.xyz, r4.xyzx, r0.wwww
                    mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r5.xyzx, r3.wwww
                    mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r11.z, r11.y, r11.y
                    mov r11.x, l(1.000000)
                    dp3 r0.w, r10.xyzx, r11.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r4.xyz, r0.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r5.xyz, r0.wwww, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r5.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                eq r0.w, cb0[23].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[18].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[19].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[20].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[21].xyzx  // L<12,13,14>
                  mov r0.w, cb0[21].w  // L<15>
                  mov r13.xyz, cb0[22].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[29].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[24].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[25].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[26].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[27].xyzx  // L<12,13,14>
                  mov r0.w, cb0[27].w  // L<15>
                  mov r13.xyz, cb0[28].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[35].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[30].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[31].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[32].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[33].xyzx  // L<12,13,14>
                  mov r0.w, cb0[33].w  // L<15>
                  mov r13.xyz, cb0[34].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[41].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[36].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[37].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[38].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[39].xyzx  // L<12,13,14>
                  mov r0.w, cb0[39].w  // L<15>
                  mov r13.xyz, cb0[40].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[47].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[42].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[43].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[44].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[45].xyzx  // L<12,13,14>
                  mov r0.w, cb0[45].w  // L<15>
                  mov r13.xyz, cb0[46].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[53].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[48].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[49].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[50].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[51].xyzx  // L<12,13,14>
                  mov r0.w, cb0[51].w  // L<15>
                  mov r13.xyz, cb0[52].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[59].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[54].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[55].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[56].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[57].xyzx  // L<12,13,14>
                  mov r0.w, cb0[57].w  // L<15>
                  mov r13.xyz, cb0[58].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[65].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[60].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[61].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[62].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[63].xyzx  // L<12,13,14>
                  mov r0.w, cb0[63].w  // L<15>
                  mov r13.xyz, cb0[64].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                eq r0.w, cb0[71].x, l(1.000000)
                if_nz r0.w
                
                #line 223
                  nop 
                  mov r6.xyz, v4.xyzx  // mat<0,1,2>
                  mov r7.xyz, v5.xyzx  // mat<4,5,6>
                  mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                  mov r9.xyz, cb0[66].xyzx  // L<0,1,2>
                  mov r10.xyz, cb0[67].xyzx  // L<4,5,6>
                  mov r11.xyz, cb0[68].xyzx  // L<8,9,10>
                  mov r12.xyz, cb0[69].xyzx  // L<12,13,14>
                  mov r0.w, cb0[69].w  // L<15>
                  mov r13.xyz, cb0[70].xyzx  // L<16,17,18>
                  mov r14.xyz, v1.xyzx  // pos<0,1,2>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 108 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx
                  add r12.xyz, r12.xyzx, r14.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 111
                  dp3 r1.w, r12.xyzx, r12.xyzx
                  sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 114
                  lt r0.w, r0.w, r14.y
                
                #line 118
                  if_z r0.w
                    div r12.xyz, r12.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                    mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 126
                    dp3 r0.w, r12.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 130
                    lt r1.w, l(0.000000), r0.w
                    mov r9.xyz, -r12.xyzx
                    dp3 r3.w, r9.xyzx, r15.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r12.xyz, r3.wwww, r15.xyzx
                    add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.w, r9.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.w, r3.w, r8.w
                    exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                    mul r7.xyz, r7.xyzx, r0.wwww
                    mul r7.xyz, r10.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r8.xyzx, r3.wwww
                    mul r8.xyz, r11.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                    movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r8.xyz, r1.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                    mul r14.z, r14.y, r14.y
                    mov r14.x, l(1.000000)
                    dp3 r0.w, r13.xyzx, r14.xyzx
                    div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                    mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r8.xyz, r0.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                  else 
                    mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r8.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 223 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                  mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                endif 
                
                #line 232
                nop 
                mov r6.xyz, v4.xyzx  // mat<0,1,2>
                mov r7.xyz, v5.xyzx  // mat<4,5,6>
                mov r8.xyzw, v6.xyzw  // mat<8,9,10,11>
                mov r9.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 75
                mul r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 80
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 84
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 232 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 240
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 245
                lt r0.w, l(0.000000), v8.w
                ge r1.x, v0.x, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].z, v0.x
                and r0.w, r0.w, r1.x
                ge r1.x, v0.y, l(0.000000)
                and r0.w, r0.w, r1.x
                ge r1.x, cb0[80].w, v0.y
                and r0.w, r0.w, r1.x
                if_nz r0.w
                  mov r0.w, v0.x  // pin<0:[-0f,3.40282e+038f]>
                  mov r1.x, cb0[80].z  // gScreenSize<0:[-0f,3.40282e+038f]>
                  mov r1.y, v0.y  // pin<1:[-0f,3.40282e+038f]>
                  mov r1.z, cb0[80].w  // gScreenSize<1:[-0f,3.40282e+038f]>
                  add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  div r1.x, r1.x, l(2.000000)  // halfWidth<0:[-0f,1.70141e+038f]>
                  div r1.z, r1.z, l(2.000000)  // halfHeight<0:[-0f,1.70141e+038f]>
                  mov r1.w, -r1.x
                  add r0.w, r0.w, r1.w  // xDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mov r1.w, -r1.z
                  add r1.y, r1.w, r1.y  // yDif<0:[-1.70141e+038f,3.40282e+038f]>
                  mul r0.w, r0.w, r0.w
                  mul r1.y, r1.y, r1.y
                  add r0.w, r0.w, r1.y  // dist<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  mul r1.y, r1.z, r1.z
                  add r1.x, r1.y, r1.x  // range<0:NaN:Inf>
                
                #line 256
                  ge r1.y, r1.x, r0.w
                  if_nz r1.y
                    mul r1.yzw, v8.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
                    mul r1.yzw, r0.wwww, r1.yyzw
                    div r1.xyz, r1.yzwy, r1.xxxx
                    add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  endif 
                
                #line 245
                endif 
                
                #line 263
                mul r0.w, r2.w, v5.w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 696 instruction slots used
                            
            };
        }

    }

    technique11 TexturePassThroughDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_4_0
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 141 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[16].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[17].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[18].xyzx  // vout<9:NaN:Inf>
                
                #line 145
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 148
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r3.xyzw  // TextureVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // TextureVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // TextureVS<28,29>
                mov o4.xyzw, r0.xyzw  // TextureVS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // TextureVS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // TextureVS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // TextureVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // TextureVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // TextureVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 290 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                sample r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 295
                mul r0.w, r0.w, l(0.500000)  // litColor<3:Inf>
                mov o0.xyz, r0.xyzx  // TexturePS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // TexturePS<3:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 TexturePassThroughWithCursorDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_4_0
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 8
                
                #line 141 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[16].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[17].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[18].xyzx  // vout<9:NaN:Inf>
                
                #line 145
                dp4 r3.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 148
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<11:NaN:Inf>
                mov r0.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r5.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r6.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r7.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r4.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r3.xyzw  // TextureVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r4.xyxx  // TextureVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r4.zzzw  // TextureVS<28,29>
                mov o4.xyzw, r0.xyzw  // TextureVS<12,13,14,15>
                mov o5.xyzw, r5.xyzw  // TextureVS<16,17,18,19>
                mov o6.xyzw, r6.xyzw  // TextureVS<20,21,22,23>
                mov o7.xyzw, r7.xyzw  // TextureVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // TextureVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // TextureVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 270 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                ge r0.x, v3.x, l(0.495000)
                and r0.x, r0.x, l(-1)
                ge r0.y, l(0.505000), v3.x
                and r0.x, r0.y, r0.x
                ge r0.y, v3.y, l(0.495000)
                and r0.x, r0.y, r0.x
                ge r0.y, l(0.505000), v3.y
                and r0.x, r0.y, r0.x
                if_nz r0.x
                  mov o0.xyzw, l(0,0,0,1.000000)  // TexturePS<0: 0f,1: 0f,2: 0f,3: 1f>
                  ret 
                endif 
                
                #line 290
                sample r0.xyzw, v3.xyxx, t0.xyzw, s1  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 295
                mul r0.w, r0.w, l(0.500000)  // litColor<3:Inf>
                mov o0.xyz, r0.xyzx  // TexturePS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // TexturePS<3:Inf>
                ret 
                // Approximately 18 instruction slots used
                            
            };
        }

    }

    technique11 HorzBlurDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_4_0
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 305 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, cb0[80].x  // texOffset<0>
                mov r0.y, l(0)  // texOffset<1: 0f>
                
                #line 313
                sample_l r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN:Inf,1:NaN>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 VertBlurDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_4_0
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 309 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, l(0)  // texOffset<0: 0f>
                mov r0.y, cb0[80].y  // texOffset<1>
                
                #line 313
                sample_l r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN,1:NaN:Inf>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 BlurDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_4_0
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 309 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, l(0)  // texOffset<0: 0f>
                mov r0.y, cb0[80].y  // texOffset<1>
                
                #line 313
                sample_l r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN,1:NaN:Inf>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float       
                // MATERIAL                 1   xyzw        8     NONE  float       
                // MATERIAL                 2   xyzw        9     NONE  float       
                // MATERIAL                 3   xyzw       10     NONE  float       
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float       
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_4_0
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                
                #line 161 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r0.w, l(1.000000)  // vout<3: 1f>
                
                #line 164
                mov r1.xy, v2.xyxx  // vout<4,5>
                mov o0.xyzw, r0.xyzw  // BlurVS<0,1,2,3: 1f>
                mov o1.xy, r1.xyxx  // BlurVS<4,5>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16
                //   float gTexelWidth;                 // Offset: 1280 Size:     4
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8 [unused]
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8 [unused]
                //   float2 Scale;                      // Offset: 1312 Size:     8 [unused]
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8 [unused]
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16 [unused]
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[21];                // Offset:    0 Size:   324
                //      = 0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f400000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 0x00000000 0x00000000 0x00000000 
                //        0x3f000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samInputImage                     sampler      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSettings                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[81], immediateIndexed
                dcl_constantbuffer cb1[21], dynamicIndexed
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 305 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.x, cb0[80].x  // texOffset<0>
                mov r0.y, l(0)  // texOffset<1: 0f>
                
                #line 313
                sample_l r1.xyzw, v1.xyxx, t0.xyzw, s1, l(0.000000)
                mul r1.xyzw, r1.xyzw, cb1[10].xxxx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.z, cb1[10].x  // totalWeight<0>
                
                #line 323
                mov r0.w, l(-2.000000)  // i<0:[-2f,-2f]>
                mov r2.xyzw, r1.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r3.x, r0.z  // totalWeight<0:Inf>
                mov r3.y, r0.w  // i<0:Inf>
                loop 
                  ge r3.z, l(2.000000), r3.y
                  breakc_z r3.z
                
                #line 326
                  eq r3.z, r3.y, l(0.000000)
                  if_nz r3.z
                    mov r3.y, l(1.000000)  // i<0: 1f>
                    continue 
                  endif 
                
                #line 329
                  mul r3.zw, r0.xxxy, r3.yyyy
                  add r3.zw, r3.zzzw, v1.xxxy  // tex<0:NaN:Inf,1:NaN>
                  add r4.x, r3.y, l(2.000000)
                  ftou r4.x, r4.x
                  mov r4.x, cb1[r4.x + 0].x  // weight<0>
                
                #line 334
                  sample_l r5.xyzw, r3.zwzz, t0.xyzw, s1, l(0.000000)
                  mul r5.xyzw, r4.xxxx, r5.xyzw
                  add r2.xyzw, r2.xyzw, r5.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                  add r3.x, r3.x, r4.x  // totalWeight<0:Inf>
                
                #line 323
                  add r3.y, r3.y, l(1.000000)  // i<0:Inf>
                endloop 
                
                #line 339
                add r0.xyzw, r2.xyzw, cb0[79].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                div o0.xyzw, r0.xyzw, r3.xxxx  // BlurPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
        }

    }

    technique11 OculusTechDX10
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4x4 gOcView;                  // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float       
                // WORLD                    1   xyzw        4     NONE  float       
                // WORLD                    2   xyzw        5     NONE  float       
                // WORLD                    3   xyzw        6     NONE  float       
                // MATERIAL                 0   xyzw        7     NONE  float   xyzw
                // MATERIAL                 1   xyzw        8     NONE  float   xyzw
                // MATERIAL                 2   xyzw        9     NONE  float   xyzw
                // MATERIAL                 3   xyzw       10     NONE  float   xyzw
                // SV_InstanceID            0   x          11   INSTID   uint       
                // ATLASCOORD               0   xy         12     NONE  float   xy  
                // GLOWCOLOR                0   xyzw       13     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float     zw
                // MATERIAL                 0   xyzw        4     NONE  float   xyzw
                // MATERIAL                 1   xyzw        5     NONE  float   xyzw
                // MATERIAL                 2   xyzw        6     NONE  float   xyzw
                // MATERIAL                 3   xyzw        7     NONE  float   xyzw
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                vs_4_0
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.xyzw
                dcl_input v12.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 7
                
                #line 173 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mul r0.xyzw, v0.xxxx, cb0[0].xyzw
                mul r1.xyzw, v0.yyyy, cb0[1].xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, v0.zzzz, cb0[2].xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // vout<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r1.xyz, v0.xxxx, cb0[0].xyzx
                mul r2.xyz, v0.yyyy, cb0[1].xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r2.xyz, v0.zzzz, cb0[2].xyzx
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r2.xyz, cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r2.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mul r2.xy, v2.xxxx, cb1[8].xyxx
                mul r2.zw, v2.yyyy, cb1[9].xxxy
                add r2.xy, r2.zwzz, r2.xyxx
                add r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
                mul r2.zw, cb1[11].xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                add r2.xy, r2.zwzz, r2.xyxx  // vout<10:NaN:Inf,11:NaN:Inf>
                mov r3.xyzw, v7.xyzw  // vout<12,13,14,15>
                mov r4.xyzw, v8.xyzw  // vout<16,17,18,19>
                mov r5.xyzw, v9.xyzw  // vout<20,21,22,23>
                mov r6.xyzw, v10.xyzw  // vout<24,25,26,27>
                mov r2.zw, v12.xxxy  // vout<28,29>
                mov o0.xyzw, r0.xyzw  // OculusVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r2.xyxx  // OculusVS<10:NaN:Inf,11:NaN:Inf>
                mov o3.zw, r2.zzzw  // OculusVS<28,29>
                mov o4.xyzw, r3.xyzw  // OculusVS<12,13,14,15>
                mov o5.xyzw, r4.xyzw  // OculusVS<16,17,18,19>
                mov o6.xyzw, r5.xyzw  // OculusVS<20,21,22,23>
                mov o7.xyzw, r6.xyzw  // OculusVS<24,25,26,27>
                mov o1.xyz, r1.xyzx  // OculusVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float3 Position;               // Offset:  240
                //       float Range;                   // Offset:  252
                //       float3 Att;                    // Offset:  256
                //       float pad;                     // Offset:  268
                //       float4 On;                     // Offset:  272
                //
                //   } testLights[10];                  // Offset:  192 Size:   960 [unused]
                //   
                //   struct
                //   {
                //       
                //       float4 Ambient;                // Offset: 1152
                //       float4 Diffuse;                // Offset: 1168
                //       float4 Specular;               // Offset: 1184
                //       float3 Position;               // Offset: 1200
                //       float Range;                   // Offset: 1212
                //       float3 Att;                    // Offset: 1216
                //       float pad;                     // Offset: 1228
                //       float4 On;                     // Offset: 1232
                //
                //   } gPointLight;                     // Offset: 1152 Size:    96 [unused]
                //   float3 gEyePosW;                   // Offset: 1248 Size:    12 [unused]
                //   float4 gBlurColor;                 // Offset: 1264 Size:    16 [unused]
                //   float gTexelWidth;                 // Offset: 1280 Size:     4 [unused]
                //   float gTexelHeight;                // Offset: 1284 Size:     4 [unused]
                //   float2 gScreenSize;                // Offset: 1288 Size:     8 [unused]
                //   float2 LensCenter;                 // Offset: 1296 Size:     8
                //   float2 ScreenCenter;               // Offset: 1304 Size:     8
                //   float2 Scale;                      // Offset: 1312 Size:     8
                //   float2 ScaleIn;                    // Offset: 1320 Size:     8
                //   float4 HmdWarpParam;               // Offset: 1328 Size:    16
                //   float4 ChromAbParam;               // Offset: 1344 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // Linear                            sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // ATLASCOORD               0     zw        3     NONE  float       
                // MATERIAL                 0   xyzw        4     NONE  float       
                // MATERIAL                 1   xyzw        5     NONE  float       
                // MATERIAL                 2   xyzw        6     NONE  float       
                // MATERIAL                 3   xyzw        7     NONE  float       
                // GLOWCOLOR                0   xyzw        8     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[85], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 4
                
                #line 346 "C:\Users\Jason\Desktop\3DGP\OculusSingleRenderDistortion\PVGame\PeripheralVoid\FX\HardwareInstancing.fx"
                mov r0.xy, -cb0[81].xyxx
                add r0.xy, r0.xyxx, v3.xyxx
                mul r0.xy, r0.xyxx, cb0[82].zwzz  // theta<0:NaN:Inf,1:NaN:Inf>
                mul r0.z, r0.x, r0.x
                mul r0.w, r0.y, r0.y
                add r0.z, r0.w, r0.z  // rSq<0:NaN:Inf>
                mul r0.w, r0.z, cb0[83].y
                add r0.w, r0.w, cb0[83].x
                mul r1.x, r0.z, cb0[83].z
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r1.x, r0.z, cb0[83].w
                mul r1.x, r0.z, r1.x
                mul r1.x, r0.z, r1.x
                add r0.w, r0.w, r1.x
                mul r0.xy, r0.wwww, r0.xyxx  // theta1<0:NaN:Inf,1:NaN:Inf>
                
                #line 352
                mul r0.w, r0.z, cb0[84].w
                add r0.w, r0.w, cb0[84].z
                mul r1.xy, r0.wwww, r0.xyxx  // thetaBlue<0:NaN:Inf,1:NaN:Inf>
                mul r1.xy, r1.xyxx, cb0[82].xyxx
                add r1.xy, r1.xyxx, cb0[81].xyxx  // tcBlue<0:NaN:Inf,1:NaN:Inf>
                add r1.zw, cb0[81].zzzw, l(0.000000, 0.000000, -0.250000, -0.500000)
                add r2.xy, cb0[81].zwzz, l(0.250000, 0.500000, 0.000000, 0.000000)
                max r1.zw, r1.zzzw, r1.xxxy
                min r1.zw, r2.xxxy, r1.zzzw
                mov r2.xy, -r1.xyxx
                add r1.zw, r1.zzzw, r2.xxxy
                dp2 r0.w, r1.zwzz, r1.zwzz
                ne r0.w, r0.w, l(0.000000)
                
                #line 358
                sample r1.xyzw, r1.xyxx, t0.xyzw, s0
                
                #line 361
                mul r1.xy, r0.xyxx, cb0[82].xyxx
                add r1.xy, r1.xyxx, cb0[81].xyxx  // tcGreen<0:NaN:Inf,1:NaN:Inf>
                sample r2.xyzw, r1.xyxx, t0.xyzw, s0
                mul r0.z, r0.z, cb0[84].y
                add r0.z, r0.z, cb0[84].x
                mul r0.xy, r0.zzzz, r0.xyxx  // thetaRed<0:NaN:Inf,1:NaN:Inf>
                mul r0.xy, r0.xyxx, cb0[82].xyxx
                add r0.xy, r0.xyxx, cb0[81].xyxx  // tcRed<0:NaN:Inf,1:NaN:Inf>
                sample r3.xyzw, r0.xyxx, t0.xyzw, s0
                
                #line 354
                if_nz r0.w
                  mov o0.xyzw, l(0,0,0,0)  // OculusPS<0: 0f,1: 0f,2: 0f,3: 0f>
                  ret 
                endif 
                
                #line 358
                mov r1.z, r1.z  // blue<0:Inf>
                
                #line 362
                mov r2.y, r2.y  // green<0:Inf>
                
                #line 366
                mov r3.x, r3.x  // red<0:Inf>
                mov o0.w, l(1.000000)  // OculusPS<3: 1f>
                mov o0.x, r3.x  // OculusPS<0:Inf>
                mov o0.y, r2.y  // OculusPS<1:Inf>
                mov o0.z, r1.z  // OculusPS<2:Inf>
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

}

